# Implementation Plan: Enhanced Rating & Review System

## Overview
Transform the rating and review system to be more like Letterboxd/Beli/Goodreads, where:
- Users are prompted to submit a review with each rating
- Emoji reactions can be used as ratings (e.g., 3 ðŸ˜³ out of 5)
- Clicking on a rating opens a popover for rating/reviewing
- Clicking on a reaction opens a popover for emoji-rating
- Vibes display their most-interacted emoji reaction as the primary visual
- Expanded view shows top emoji ratings

## Phase 1: Database Schema Updates
### Tasks:
- [ ] **1.1 Update Ratings Table Schema**
  - [ ] Add `emojiRating` field (optional) to store emoji-based ratings
  - [ ] Add `emojiScale` field to store the scale (e.g., 5 for "out of 5")
  - [ ] Add `tags` field (array) to store associated tags for the rating
  - [ ] Create migration script for existing data

- [ ] **1.2 Create Emoji Rating Metadata Table**
  - [ ] Create new table `emojiRatingMetadata`
  - [ ] Fields: `emoji`, `tags` (array), `category`, `sentiment`
  - [ ] Populate with common rating emojis and their associated tags

- [ ] **1.3 Update Reactions Table**
  - [ ] Add `ratingValue` field (optional number 1-5)
  - [ ] Add `isRating` boolean to distinguish rating reactions from regular reactions
  - [ ] Create indexes for efficient emoji rating queries

## Phase 2: Backend Functions
### Tasks:
- [ ] **2.1 Rating Mutations**
  - [ ] Update `createOrUpdateRating` to accept emoji ratings
  - [ ] Add validation for emoji rating scales
  - [ ] Ensure review is prompted/required with new ratings
  - [ ] Add tag association logic based on emoji metadata

- [ ] **2.2 New Query Functions**
  - [ ] Create `getTopEmojiRatings` to fetch most-used emoji ratings for a vibe
  - [ ] Create `getMostInteractedEmoji` to determine primary emoji display
  - [ ] Update `getVibeStats` to include emoji rating statistics
  - [ ] Create `getEmojiRatingMetadata` for tag lookups

- [ ] **2.3 Analytics Functions**
  - [ ] Add emoji rating aggregation logic
  - [ ] Calculate emoji rating averages (e.g., 3.5 ðŸ˜³ out of 5)
  - [ ] Track emoji rating trends

## Phase 3: Frontend Components
### Tasks:
- [ ] **3.1 Rating Popover Component**
  - [ ] Create `RatingPopover` component that opens on rating click
  - [ ] Include star rating selector
  - [ ] Make review textarea required (with character minimum)
  - [ ] Add emoji rating option toggle
  - [ ] Show existing rating/review if updating
  - [ ] Implement proper form validation

- [ ] **3.2 Emoji Rating Component**
  - [ ] Create `EmojiRatingPopover` component
  - [ ] Allow selecting an emoji and rating scale (1-5)
  - [ ] Visual representation of emoji rating (e.g., 3 ðŸ˜³ 2 â­•)
  - [ ] Show associated tags for selected emoji
  - [ ] Add review textarea (required)

- [ ] **3.3 Update Existing Components**
  - [ ] Modify `StarRating` to open popover instead of direct rating
  - [ ] Update `EmojiReaction` to support rating mode
  - [ ] Create `EmojiRatingDisplay` component for showing emoji ratings

## Phase 4: Visual Updates
### Tasks:
- [ ] **4.1 Vibe Card Updates**
  - [ ] Replace or supplement star rating with most-interacted emoji
  - [ ] Show emoji rating average (e.g., "3.5 ðŸ˜³")
  - [ ] Add expand button to see top emoji ratings
  - [ ] Maintain backward compatibility with star ratings

- [ ] **4.2 Vibe Detail Page Updates**
  - [ ] Show primary emoji rating prominently
  - [ ] Display top 5 emoji ratings with counts
  - [ ] Update review cards to show emoji ratings
  - [ ] Add emoji rating filter for reviews

- [ ] **4.3 Rating Visualization**
  - [ ] Create component for displaying emoji scales (filled/unfilled emojis)
  - [ ] Add animations for emoji rating interactions
  - [ ] Implement hover states showing rating details

## Phase 5: User Experience Enhancements
### Tasks:
- [ ] **5.1 Rating Flow**
  - [ ] Implement rating â†’ review prompt flow
  - [ ] Add "Quick Rate" vs "Rate & Review" options
  - [ ] Show rating history in user profile
  - [ ] Add rating reminders for viewed vibes

- [ ] **5.2 Discovery Features**
  - [ ] Add emoji-based vibe discovery
  - [ ] Create "Vibes rated 5 ðŸ˜±" type collections
  - [ ] Implement tag-based recommendations from emoji ratings

- [ ] **5.3 Social Features**
  - [ ] Show friends' emoji ratings
  - [ ] Add emoji rating trends/statistics
  - [ ] Create emoji rating leaderboards

## Phase 6: Testing & Migration
### Tasks:
- [ ] **6.1 Unit Tests**
  - [ ] Test emoji rating validation logic
  - [ ] Test popover components
  - [ ] Test rating aggregation functions
  - [ ] Test tag association logic

- [ ] **6.2 Integration Tests**
  - [ ] Test full rating flow with popovers
  - [ ] Test emoji rating submission and display
  - [ ] Test migration of existing ratings
  - [ ] Test backward compatibility

- [ ] **6.3 Data Migration**
  - [ ] Create migration script for existing ratings
  - [ ] Backfill emoji metadata for common reactions
  - [ ] Update existing reaction data structure
  - [ ] Verify data integrity post-migration

## Technical Considerations

### Component Architecture
```
RatingPopover
â”œâ”€â”€ StarRatingSelector
â”œâ”€â”€ EmojiRatingToggle
â”œâ”€â”€ ReviewTextarea (required)
â””â”€â”€ SubmitButton

EmojiRatingPopover
â”œâ”€â”€ EmojiPicker
â”œâ”€â”€ RatingScaleSelector (1-5)
â”œâ”€â”€ TagDisplay
â”œâ”€â”€ ReviewTextarea (required)
â””â”€â”€ SubmitButton
```

### State Management
- Use TanStack Query for rating data
- Optimistic updates for better UX
- Local state for popover forms
- Global state for user's ratings cache

### Performance
- Lazy load emoji metadata
- Cache most-interacted emojis
- Debounce rating updates
- Use virtual scrolling for emoji lists

### Accessibility
- Keyboard navigation for popovers
- Screen reader support for emoji ratings
- Alternative text for emoji displays
- Focus management in popovers

## Success Metrics
- Increase in review submissions per rating
- Adoption rate of emoji ratings
- User engagement with rating popovers
- Performance impact (should be minimal)

## Rollout Strategy
1. Feature flag for new rating system
2. A/B test with subset of users
3. Gradual rollout monitoring metrics
4. Full release with migration