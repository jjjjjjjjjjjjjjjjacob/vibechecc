/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as SignUpImport } from './routes/sign-up';
import { Route as SignInImport } from './routes/sign-in';
import { Route as ProfileImport } from './routes/profile';
import { Route as OnboardingImport } from './routes/onboarding';
import { Route as IndexImport } from './routes/index';
import { Route as VibesIndexImport } from './routes/vibes/index';
import { Route as VibesMyVibesImport } from './routes/vibes/my-vibes';
import { Route as VibesCreateImport } from './routes/vibes/create';
import { Route as VibesVibeIdImport } from './routes/vibes/$vibeId';

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any);

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any);

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any);

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const VibesIndexRoute = VibesIndexImport.update({
  id: '/vibes/',
  path: '/vibes/',
  getParentRoute: () => rootRoute,
} as any);

const VibesMyVibesRoute = VibesMyVibesImport.update({
  id: '/vibes/my-vibes',
  path: '/vibes/my-vibes',
  getParentRoute: () => rootRoute,
} as any);

const VibesCreateRoute = VibesCreateImport.update({
  id: '/vibes/create',
  path: '/vibes/create',
  getParentRoute: () => rootRoute,
} as any);

const VibesVibeIdRoute = VibesVibeIdImport.update({
  id: '/vibes/$vibeId',
  path: '/vibes/$vibeId',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/onboarding': {
      id: '/onboarding';
      path: '/onboarding';
      fullPath: '/onboarding';
      preLoaderRoute: typeof OnboardingImport;
      parentRoute: typeof rootRoute;
    };
    '/profile': {
      id: '/profile';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof ProfileImport;
      parentRoute: typeof rootRoute;
    };
    '/sign-in': {
      id: '/sign-in';
      path: '/sign-in';
      fullPath: '/sign-in';
      preLoaderRoute: typeof SignInImport;
      parentRoute: typeof rootRoute;
    };
    '/sign-up': {
      id: '/sign-up';
      path: '/sign-up';
      fullPath: '/sign-up';
      preLoaderRoute: typeof SignUpImport;
      parentRoute: typeof rootRoute;
    };
    '/vibes/$vibeId': {
      id: '/vibes/$vibeId';
      path: '/vibes/$vibeId';
      fullPath: '/vibes/$vibeId';
      preLoaderRoute: typeof VibesVibeIdImport;
      parentRoute: typeof rootRoute;
    };
    '/vibes/create': {
      id: '/vibes/create';
      path: '/vibes/create';
      fullPath: '/vibes/create';
      preLoaderRoute: typeof VibesCreateImport;
      parentRoute: typeof rootRoute;
    };
    '/vibes/my-vibes': {
      id: '/vibes/my-vibes';
      path: '/vibes/my-vibes';
      fullPath: '/vibes/my-vibes';
      preLoaderRoute: typeof VibesMyVibesImport;
      parentRoute: typeof rootRoute;
    };
    '/vibes/': {
      id: '/vibes/';
      path: '/vibes';
      fullPath: '/vibes';
      preLoaderRoute: typeof VibesIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/onboarding': typeof OnboardingRoute;
  '/profile': typeof ProfileRoute;
  '/sign-in': typeof SignInRoute;
  '/sign-up': typeof SignUpRoute;
  '/vibes/$vibeId': typeof VibesVibeIdRoute;
  '/vibes/create': typeof VibesCreateRoute;
  '/vibes/my-vibes': typeof VibesMyVibesRoute;
  '/vibes': typeof VibesIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/onboarding': typeof OnboardingRoute;
  '/profile': typeof ProfileRoute;
  '/sign-in': typeof SignInRoute;
  '/sign-up': typeof SignUpRoute;
  '/vibes/$vibeId': typeof VibesVibeIdRoute;
  '/vibes/create': typeof VibesCreateRoute;
  '/vibes/my-vibes': typeof VibesMyVibesRoute;
  '/vibes': typeof VibesIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/onboarding': typeof OnboardingRoute;
  '/profile': typeof ProfileRoute;
  '/sign-in': typeof SignInRoute;
  '/sign-up': typeof SignUpRoute;
  '/vibes/$vibeId': typeof VibesVibeIdRoute;
  '/vibes/create': typeof VibesCreateRoute;
  '/vibes/my-vibes': typeof VibesMyVibesRoute;
  '/vibes/': typeof VibesIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/onboarding'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/onboarding'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes';
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  OnboardingRoute: typeof OnboardingRoute;
  ProfileRoute: typeof ProfileRoute;
  SignInRoute: typeof SignInRoute;
  SignUpRoute: typeof SignUpRoute;
  VibesVibeIdRoute: typeof VibesVibeIdRoute;
  VibesCreateRoute: typeof VibesCreateRoute;
  VibesMyVibesRoute: typeof VibesMyVibesRoute;
  VibesIndexRoute: typeof VibesIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingRoute: OnboardingRoute,
  ProfileRoute: ProfileRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  VibesVibeIdRoute: VibesVibeIdRoute,
  VibesCreateRoute: VibesCreateRoute,
  VibesMyVibesRoute: VibesMyVibesRoute,
  VibesIndexRoute: VibesIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/onboarding",
        "/profile",
        "/sign-in",
        "/sign-up",
        "/vibes/$vibeId",
        "/vibes/create",
        "/vibes/my-vibes",
        "/vibes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/vibes/$vibeId": {
      "filePath": "vibes/$vibeId.tsx"
    },
    "/vibes/create": {
      "filePath": "vibes/create.tsx"
    },
    "/vibes/my-vibes": {
      "filePath": "vibes/my-vibes.tsx"
    },
    "/vibes/": {
      "filePath": "vibes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
