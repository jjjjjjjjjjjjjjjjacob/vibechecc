name: Ephemeral Destroy

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - main

jobs:
  destroy-ephemeral:
    if: >-
      github.event.pull_request.head.ref != 'dev' &&
      github.event.pull_request.head.ref != 'main'
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate backend configuration
        working-directory: terraform
        env:
          R2_BUCKET: ${{ vars.CLOUDFLARE_R2_BUCKET }}
          TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_cloudflare_zone: ${{ vars.CLOUDFLARE_ZONE }}
          TF_VAR_environment: ephemeral
          TF_VAR_pr_number: ${{ github.event.pull_request.number }}
          R2_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        run: |
          chmod +x ./generate-backend-config.sh
          ./generate-backend-config.sh

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -backend-config=backend.tfvars

      - name: Select Ephemeral Workspace
        working-directory: terraform
        run: terraform workspace select pr-${{ github.event.pull_request.number }}

      - name: Terraform Destroy
        working-directory: terraform
        env:
          TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_cloudflare_zone: ${{ vars.CLOUDFLARE_ZONE }}
          TF_VAR_environment: ephemeral
          TF_VAR_pr_number: ${{ github.event.pull_request.number }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve

      - name: Delete Ephemeral Workspace
        working-directory: terraform
        run: terraform workspace select default && terraform workspace delete pr-${{ github.event.pull_request.number }}

      # Notes:
      # - This workflow only runs for PRs from branches other than dev/main into dev/main.
      # - It destroys and deletes the ephemeral Terraform workspace for the PR.
      # - If the workspace does not exist, the job will fail safely. 