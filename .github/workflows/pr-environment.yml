name: PR Environment

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  pr-infra:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Cache Terraform plugins
        uses: useblacksmith/cache@v5
        with:
          path: |
            ~/.terraform.d/plugin-cache
            terraform/environments/ephemeral/.terraform
          key: ${{ runner.os }}-terraform-ephemeral-${{ hashFiles('terraform/**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-ephemeral-
            ${{ runner.os }}-terraform-

      - name: Configure Cloudflare credentials for R2 state storage
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        run: echo "Cloudflare credentials configured for Terraform state storage"

      - name: Terraform Apply
        if: github.event.action != 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        run: |
          terraform -chdir=terraform/environments/ephemeral init
          terraform -chdir=terraform/environments/ephemeral apply -auto-approve -var="pr_number=${{ github.event.number }}" -var="cloudflare_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}"

      - name: Terraform Destroy
        if: github.event.action == 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        run: |
          terraform -chdir=terraform/environments/ephemeral init
          terraform -chdir=terraform/environments/ephemeral destroy -auto-approve -var="pr_number=${{ github.event.number }}" -var="cloudflare_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}"

  pr-app:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    needs: pr-infra
    if: github.event.action != 'closed'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Cache Bun dependencies
        uses: useblacksmith/cache@v5
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '3'
          command: 'deploy --env ephemeral'
