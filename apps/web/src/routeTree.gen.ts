/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SearchRouteImport } from './routes/search'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as DiscoverRouteImport } from './routes/discover'
import { Route as DataRouteImport } from './routes/data'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VibesIndexRouteImport } from './routes/vibes/index'
import { Route as VibesMyVibesRouteImport } from './routes/vibes/my-vibes'
import { Route as VibesCreateRouteImport } from './routes/vibes/create'
import { Route as VibesVibeIdRouteImport } from './routes/vibes/$vibeId'
import { Route as UsersUsernameRouteImport } from './routes/users.$username'
import { Route as SitemapXmlRouteImport } from './routes/sitemap.xml'
import { Route as RatingsRatingIdRouteImport } from './routes/ratings/$ratingId'
import { Route as VibesVibeIdEditRouteImport } from './routes/vibes/$vibeId/edit'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscoverRoute = DiscoverRouteImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => rootRouteImport,
} as any)
const DataRoute = DataRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VibesIndexRoute = VibesIndexRouteImport.update({
  id: '/vibes/',
  path: '/vibes/',
  getParentRoute: () => rootRouteImport,
} as any)
const VibesMyVibesRoute = VibesMyVibesRouteImport.update({
  id: '/vibes/my-vibes',
  path: '/vibes/my-vibes',
  getParentRoute: () => rootRouteImport,
} as any)
const VibesCreateRoute = VibesCreateRouteImport.update({
  id: '/vibes/create',
  path: '/vibes/create',
  getParentRoute: () => rootRouteImport,
} as any)
const VibesVibeIdRoute = VibesVibeIdRouteImport.update({
  id: '/vibes/$vibeId',
  path: '/vibes/$vibeId',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUsernameRoute = UsersUsernameRouteImport.update({
  id: '/users/$username',
  path: '/users/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const SitemapXmlRoute = SitemapXmlRouteImport.update({
  id: '/sitemap/xml',
  path: '/sitemap/xml',
  getParentRoute: () => rootRouteImport,
} as any)
const RatingsRatingIdRoute = RatingsRatingIdRouteImport.update({
  id: '/ratings/$ratingId',
  path: '/ratings/$ratingId',
  getParentRoute: () => rootRouteImport,
} as any)
const VibesVibeIdEditRoute = VibesVibeIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => VibesVibeIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/data': typeof DataRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/ratings/$ratingId': typeof RatingsRatingIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
  '/vibes/$vibeId': typeof VibesVibeIdRouteWithChildren
  '/vibes/create': typeof VibesCreateRoute
  '/vibes/my-vibes': typeof VibesMyVibesRoute
  '/vibes': typeof VibesIndexRoute
  '/vibes/$vibeId/edit': typeof VibesVibeIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/data': typeof DataRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/ratings/$ratingId': typeof RatingsRatingIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
  '/vibes/$vibeId': typeof VibesVibeIdRouteWithChildren
  '/vibes/create': typeof VibesCreateRoute
  '/vibes/my-vibes': typeof VibesMyVibesRoute
  '/vibes': typeof VibesIndexRoute
  '/vibes/$vibeId/edit': typeof VibesVibeIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/data': typeof DataRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/ratings/$ratingId': typeof RatingsRatingIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
  '/vibes/$vibeId': typeof VibesVibeIdRouteWithChildren
  '/vibes/create': typeof VibesCreateRoute
  '/vibes/my-vibes': typeof VibesMyVibesRoute
  '/vibes/': typeof VibesIndexRoute
  '/vibes/$vibeId/edit': typeof VibesVibeIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/data'
    | '/discover'
    | '/onboarding'
    | '/privacy'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/ratings/$ratingId'
    | '/sitemap/xml'
    | '/users/$username'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes'
    | '/vibes/$vibeId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/data'
    | '/discover'
    | '/onboarding'
    | '/privacy'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/ratings/$ratingId'
    | '/sitemap/xml'
    | '/users/$username'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes'
    | '/vibes/$vibeId/edit'
  id:
    | '__root__'
    | '/'
    | '/data'
    | '/discover'
    | '/onboarding'
    | '/privacy'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/ratings/$ratingId'
    | '/sitemap/xml'
    | '/users/$username'
    | '/vibes/$vibeId'
    | '/vibes/create'
    | '/vibes/my-vibes'
    | '/vibes/'
    | '/vibes/$vibeId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DataRoute: typeof DataRoute
  DiscoverRoute: typeof DiscoverRoute
  OnboardingRoute: typeof OnboardingRoute
  PrivacyRoute: typeof PrivacyRoute
  ProfileRoute: typeof ProfileRoute
  SearchRoute: typeof SearchRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  TermsRoute: typeof TermsRoute
  RatingsRatingIdRoute: typeof RatingsRatingIdRoute
  SitemapXmlRoute: typeof SitemapXmlRoute
  UsersUsernameRoute: typeof UsersUsernameRoute
  VibesVibeIdRoute: typeof VibesVibeIdRouteWithChildren
  VibesCreateRoute: typeof VibesCreateRoute
  VibesMyVibesRoute: typeof VibesMyVibesRoute
  VibesIndexRoute: typeof VibesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discover': {
      id: '/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof DiscoverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data': {
      id: '/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vibes/': {
      id: '/vibes/'
      path: '/vibes'
      fullPath: '/vibes'
      preLoaderRoute: typeof VibesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vibes/my-vibes': {
      id: '/vibes/my-vibes'
      path: '/vibes/my-vibes'
      fullPath: '/vibes/my-vibes'
      preLoaderRoute: typeof VibesMyVibesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vibes/create': {
      id: '/vibes/create'
      path: '/vibes/create'
      fullPath: '/vibes/create'
      preLoaderRoute: typeof VibesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vibes/$vibeId': {
      id: '/vibes/$vibeId'
      path: '/vibes/$vibeId'
      fullPath: '/vibes/$vibeId'
      preLoaderRoute: typeof VibesVibeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$username': {
      id: '/users/$username'
      path: '/users/$username'
      fullPath: '/users/$username'
      preLoaderRoute: typeof UsersUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sitemap/xml': {
      id: '/sitemap/xml'
      path: '/sitemap/xml'
      fullPath: '/sitemap/xml'
      preLoaderRoute: typeof SitemapXmlRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ratings/$ratingId': {
      id: '/ratings/$ratingId'
      path: '/ratings/$ratingId'
      fullPath: '/ratings/$ratingId'
      preLoaderRoute: typeof RatingsRatingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vibes/$vibeId/edit': {
      id: '/vibes/$vibeId/edit'
      path: '/edit'
      fullPath: '/vibes/$vibeId/edit'
      preLoaderRoute: typeof VibesVibeIdEditRouteImport
      parentRoute: typeof VibesVibeIdRoute
    }
  }
}

interface VibesVibeIdRouteChildren {
  VibesVibeIdEditRoute: typeof VibesVibeIdEditRoute
}

const VibesVibeIdRouteChildren: VibesVibeIdRouteChildren = {
  VibesVibeIdEditRoute: VibesVibeIdEditRoute,
}

const VibesVibeIdRouteWithChildren = VibesVibeIdRoute._addFileChildren(
  VibesVibeIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DataRoute: DataRoute,
  DiscoverRoute: DiscoverRoute,
  OnboardingRoute: OnboardingRoute,
  PrivacyRoute: PrivacyRoute,
  ProfileRoute: ProfileRoute,
  SearchRoute: SearchRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  TermsRoute: TermsRoute,
  RatingsRatingIdRoute: RatingsRatingIdRoute,
  SitemapXmlRoute: SitemapXmlRoute,
  UsersUsernameRoute: UsersUsernameRoute,
  VibesVibeIdRoute: VibesVibeIdRouteWithChildren,
  VibesCreateRoute: VibesCreateRoute,
  VibesMyVibesRoute: VibesMyVibesRoute,
  VibesIndexRoute: VibesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
